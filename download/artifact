#!/bin/bash
set -e

# ===========================
# Usage:
# ./artifact <DOMAIN> <PROJECT> <VERSION> <OUTPUT_PATH>
#
# Examples:
# ./artifact https://download.geysermc.org/v2 floodgate latest ./plugins/floodgate.jar spigot
# ./artifact https://api.papermc.io/v2 paper 1.21.8 ./paperclip.jar
# ===========================

DOMAIN="$1"       # e.g. https://download.geysermc.org/v2 or https://api.papermc.io/v2
PROJECT="$2"      # e.g. paper, floodgate
VERSION="$3"      # e.g. 1.21.8 or latest
OUTPUT="$4"       # e.g. ./plugins/floodgate.jar
FILE_NAME="$5"    # e.g. spigot or null

if [ -z "$DOMAIN" ] || [ -z "$PROJECT" ] || [ -z "$VERSION" ] || [ -z "$OUTPUT" ]; then
    echo "usage: $0 <DOMAIN> <PROJECT> <VERSION|latest> <OUTPUT_PATH> [FILE_NAME]"
    exit 1
fi

if ! command -v jq >/dev/null 2>&1; then
    echo "error: \`jq\` not installed"
    exit 1
fi

# ===========================
# If VERSION equals `latest` then scrape latest version.
# ===========================
if [ "$VERSION" = "latest" ]; then
    VERSION=$(curl -s "${DOMAIN}/projects/${PROJECT}" | jq -r '.versions[-1]')
    if [ -z "$VERSION" ] || [ "$VERSION" = "null" ]; then
        echo "error: could not find newest version of project \`${PROJECT}\`"
        exit 1
    fi
    echo "using newest version: $VERSION"
fi

# ===========================
# Scrape Buildnumber
# ===========================
LATEST_BUILD=$(curl -s "${DOMAIN}/projects/${PROJECT}/versions/${VERSION}/builds" | \
    jq -r '.builds | map(select(.channel == "default") | .build) | .[-1]')

if [ "$LATEST_BUILD" = "null" ] || [ -z "$LATEST_BUILD" ]; then
    echo "error: no stable build found for version \`$VERSION\`"
    exit 1
fi

# ===========================
# Setting files name
# ===========================
if [ -z "$FILE_NAME" ]; then
    # default format
    FILE_NAME="${PROJECT}-${VERSION}-${LATEST_BUILD}.jar"
fi

DOWNLOAD_URL="${DOMAIN}/projects/${PROJECT}/versions/${VERSION}/builds/${LATEST_BUILD}/downloads/${FILE_NAME}"

echo "URL:    $DOWNLOAD_URL"
echo "Output: $OUTPUT"

curl -L -o "$OUTPUT" "$DOWNLOAD_URL"
echo "download finished â†’ $OUTPUT"